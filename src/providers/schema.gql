# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Councelor {
  id: Int!
  userId: String!
  isOn: Boolean!
  counselorType: CounselorType!
  user: User
  Booking: [Booking!]
}

"""The type of counselor, either PSYHOPE or FACULTY"""
enum CounselorType {
  PSYHOPE
  FACULTY
}

type Booking {
  id: Int!

  """The time of the booking"""
  bookingTime: String!

  """The time of the booking"""
  bookingTime2: String!

  """The time of the booking"""
  bookingDate: DateTime!
  bookingDay: String!
  user: User
  userId: String!
  counselorType: CounselorType!
  bookingTopic: [bookingTopic!]!

  """The reason for applying for a counseling session"""
  reasonApply: String!
  closestKnown: Boolean!
  councelor: Councelor
  isAccepted: Boolean!
  isTerminated: Boolean!
  adminAcc: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum bookingTopic {
  TOPIC_1
  TOPIC_2
  TOPIC_3
}

type Account {
  faculty: String!
  role: String!
  gender: String!
  major: String!
}

type User {
  id: String!
  username: String!
  fullname: String!
  account: Account!
  isOnboarded: Boolean!
  bookings: [Booking!]!
  lineAcc: String
  igAcc: String
}

type CouncelorSchedule {
  id: Int!
  workDay: String!
  workTime: [String!]!
}

type Article {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  content: String!
  posterUrl: String!
  thumbnailUrl: String!
}

type Infografic {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  description: String!
  infograficUrl: String!
}

type Event {
  id: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  date: DateTime!
  location: String!
  time: String!
  description: String!
  posterUrl: String!
}

type CounselingLog {
  id: Int!
  userId: String!
  client: User!
  bookingId: Int!
  time: DateTime!
  detail: String!
}

type Query {
  user: User!
  findAllArticle: [Article!]!
  findByPageArticle(page: Int!): [Article!]!
  findOneArticle(id: Int!): Article!
  findByLimitArticle(limit: Int!): [Article!]!
  countArticle: Float!
  findAllInfografic: [Infografic!]!
  findByPageInfografic(page: Int!): [Infografic!]!
  findOneInfografic(id: Int!): Infografic!
  findByLimitInfografic(limit: Int!): [Infografic!]!
  countInfografic: Float!
  findAllEvent: [Event!]!
  findById(page: Int!): Event!
  findByPageEvent(page: Int!): [Event!]!
  findOneEvent(id: Int!): Event!
  findByLimitEvent(limit: Int!): [Event!]!
  countEvent: Float!
  bookingClient: Booking
  booking: [Booking!]
  adminRundown(getBookingFilter: GetAdminRundown!): [Booking!]
  bookingFilter(getBookingFilter: GetBookingFilterDto!): [Booking!]
  bookingFilterGeneral(getBookingFilterGeneral: GetBookingFilterGeneralDto!): [Booking!]
  schedule(getScheduleDTO: GetScheduleDTO!): [CouncelorSchedule!]
  counselingLog: [CounselingLog!]
  counselorFilter(getCounselorDto: GetCouncelorFilter!): [Councelor!]
}

input GetAdminRundown {
  day: DateTime
}

input GetBookingFilterDto {
  day: DateTime
  dayTime: String
  status: StatusRequest
}

enum StatusRequest {
  ACCEPTED
  NEED_ACCEPTED
}

input GetBookingFilterGeneralDto {
  day: DateTime
  counselorType: CounselorType
}

input GetScheduleDTO {
  day: DateTime!
  dayTime: String!
  dayTime2: String!
  counselorType: CounselorType!
}

input GetCouncelorFilter {
  counselorName: String
  bookingDay: String
}

type Mutation {
  createArticle(createArticleInput: CreateArticleInput!): Article!
  updateArticle(updateArticleInput: UpdateArticleInput!): Article!
  removeArticle(id: Int!): Article!
  createInfografic(createInfograficInput: CreateInfograficInput!): Infografic!
  updateInfografic(updateInfograficInput: UpdateInfograficInput!): Infografic!
  removeInfografic(id: Int!): Infografic!
  createEvent(createEventInput: CreateEventInput!): Event!
  updateEvent(updateEventInput: UpdateEventInput!): Event!
  removeEvent(id: Int!): Event!
  createBooking(createBookingInput: CreateBookingInput!): Booking
  rejectBooking(rejectBookingInput: RejectBookingDTO!): Booking
  acceptBooking(accBookingInput: AcceptBooking!): Booking
  adminAcc(adminAccInput: AdminAccBooking!): Booking
  rescheduleBooking(rescheduleBookingInput: UpdateBookingInput!): Booking!
  createCounselingLog(createCounselingLogInput: CreateCounselingLogInput!): CounselingLog
  createOnboarding(createOnboardingInput: CreateOnboardingInput!): User!
}

input CreateArticleInput {
  title: String!
  content: String!
  posterUrl: String!
  thumbnailUrl: String!
}

input UpdateArticleInput {
  title: String!
  content: String!
  posterUrl: String!
  thumbnailUrl: String!
  id: Int!
}

input CreateInfograficInput {
  title: String!
  description: String!
  infograficUrl: String!
}

input UpdateInfograficInput {
  title: String!
  description: String!
  infograficUrl: String!
  id: Int!
}

input CreateEventInput {
  title: String!
  date: DateTime!
  location: String!
  time: String!
  description: String!
  posterUrl: String!
}

input UpdateEventInput {
  title: String!
  date: DateTime!
  location: String!
  time: String!
  description: String!
  posterUrl: String!
  id: Int!
}

input CreateBookingInput {
  bookingDate: DateTime!
  bookingTime: String!
  bookingTime2: String!
  counselorType: CounselorType!
  bookingTopic: [bookingTopic!]!
  reasonApply: String!
  closestKnown: Boolean!
  number_1: Int!
  number_2: Int!
  number_3: Int!
  number_4: Int!
  number_5: Int!
  number_6: Int!
  number_7: Int!
  number_8: Int!
  number_9: Int!
  number_10: Int!
  number_11: Int!
  number_12: Int!
}

input RejectBookingDTO {
  id: Int!
}

input AcceptBooking {
  bookingDate: DateTime
  bookingTime: String
  bookingTime2: String
  counselorType: CounselorType
  bookingTopic: [bookingTopic!]
  reasonApply: String
  closestKnown: Boolean
  number_1: Int
  number_2: Int
  number_3: Int
  number_4: Int
  number_5: Int
  number_6: Int
  number_7: Int
  number_8: Int
  number_9: Int
  number_10: Int
  number_11: Int
  number_12: Int
  id: Int!
}

input AdminAccBooking {
  bookingDate: DateTime
  bookingTime: String
  bookingTime2: String
  counselorType: CounselorType
  bookingTopic: [bookingTopic!]
  reasonApply: String
  closestKnown: Boolean
  number_1: Int
  number_2: Int
  number_3: Int
  number_4: Int
  number_5: Int
  number_6: Int
  number_7: Int
  number_8: Int
  number_9: Int
  number_10: Int
  number_11: Int
  number_12: Int
  id: Int!
}

input UpdateBookingInput {
  id: Int!
  bookingDate: DateTime!
  bookingTime: String!
  bookingTime2: String!
}

input CreateCounselingLogInput {
  bookingId: Int!
  detail: String!
  title: String!
  time: DateTime!
}

input CreateOnboardingInput {
  socmed: String!
  linkSocmed: String!
}